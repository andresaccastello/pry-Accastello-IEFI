<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAADjsAAA47AAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAABAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AAQAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAEAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AAIAAAAAAAAAAAAAAAAAAAAEAAAADwAAAA8AAAAEAAAAAAAAAAAAAAAAAAAAAgAAAAMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAMAAAAAAAAAAAAAADMAAACBAAAAvAAAAOAAAADwAAAA8AAAAOAAAAC8AAAAgQAAADMAAAABAAAAAAAA
        AAMAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAIAAAADAAAAAAAAAEAAAADBAAAA/wAAAP8AAAD/AAAA/wAAAPUAAAD1AAAA/wAAAP8AAAD/AAAA/wAA
        AMIAAABBAAAAAAAAAAMAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAACAAAAAAAAAAgAAACYAAAA/wAAAP8AAADmAAAAjgAAAEgAAAAiAAAAEgAAABIAAAAiAAAASAAA
        AI4AAADmAAAA/wAAAP8AAACYAAAACAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAgAAAAAAAAASAAAAxAAAAP8AAADyAAAAeAAAAAwAAAAAAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAAAAAAAwAAAB4AAAA8gAAAP8AAADEAAAAEgAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAAAAAAACQAAAMIAAAD/AAAA1wAAAC0AAAAAAAAAAgAAAAQAAAADAAAAAgAA
        AAEAAAABAAAAAgAAAAMAAAAEAAAAAgAAAAAAAAAtAAAA1wAAAP8AAADCAAAACAAAAAAAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAACXAAAA/wAAANcAAAAbAAAAAAAAAAUAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAACAAAAAQAAAAAAAAAbAAAA1wAAAP8AAACXAAAAAAAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAARQAAAP8AAAD0AAAAMQAAAAAAAAAEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAABsAAAB2AAAAHQAAAAAAAAAyAAAA9AAA
        AP8AAABGAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAC8AAAA/wAAAHgAAAAAAAAABQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAWAAAAzAAAAP8AAABwAAAAAAAA
        AAAAAAB4AAAA/wAAALwAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAIAAAAAAAAANgAAAP8AAADkAAAAEQAA
        AAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAFgAAAM4AAAD/AAAAzAAA
        ABUAAAAAAAAAAAAAABEAAADkAAAA/wAAADYAAAAAAAAAAgAAAAAAAAAAAAAABAAAAAAAAAB/AAAA/wAA
        AI8AAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAABYAAADOAAAA/wAA
        AM4AAAAXAAAAAAAAAAEAAAAEAAAAAAAAAI8AAAD/AAAAfwAAAAAAAAAEAAAAAAAAAAAAAAACAAAAAAAA
        ALoAAAD/AAAASwAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAWAAAAzgAA
        AP8AAADOAAAAFgAAAAAAAAADAAAAAAAAAAMAAAAAAAAASwAAAP8AAAC6AAAAAAAAAAIAAAAAAAAAAQAA
        AAAAAAAEAAAA3gAAAP8AAAAkAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAFwAA
        AM8AAAD/AAAAzgAAABYAAAAAAAAAAwAAAAAAAAAAAAAAAgAAAAAAAAAkAAAA/wAAAN0AAAAEAAAAAAAA
        AAEAAAABAAAAAAAAAA4AAADvAAAA9QAAABMAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAA
        AAAAAADCAAAA/wAAAMwAAAAWAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAABAAAAAAAAABMAAAD1AAAA7wAA
        AA4AAAAAAAAAAQAAAAEAAAAAAAAADgAAAO8AAAD1AAAAEwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAAAAAAAEQAAAO8AAAD6AAAAJAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAEwAA
        APUAAADvAAAADgAAAAAAAAABAAAAAQAAAAAAAAAEAAAA3gAAAP8AAAAkAAAAAAAAAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAAAAAAQAAAA8QAAAPIAAAASAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAgAA
        AAAAAAAkAAAA/wAAAN4AAAAEAAAAAAAAAAEAAAAAAAAAAgAAAAAAAAC6AAAA/wAAAEsAAAAAAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABAAAADyAAAA8wAAABEAAAAAAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAADAAAAAAAAAEoAAAD/AAAAugAAAAAAAAACAAAAAAAAAAAAAAAEAAAAAAAAAH8AAAD/AAAAjwAA
        AAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAEAAAAPIAAADyAAAAEAAAAAAAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAQAAAAAAAAAjwAAAP8AAAB/AAAAAAAAAAQAAAAAAAAAAAAAAAIAAAAAAAAANgAA
        AP8AAADkAAAAEQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAQAAAA8gAAAPIAAAAQAAAAAAAA
        AAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAABEAAADjAAAA/wAAADYAAAAAAAAAAgAAAAAAAAAAAAAAAAAA
        AAEAAAAAAAAAvAAAAP8AAAB4AAAAAAAAAAUAAAAAAAAAAAAAAAAAAAABAAAAAAAAABAAAADyAAAA8gAA
        ABAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAUAAAAAAAAAeAAAAP8AAAC8AAAAAAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAwAAAAAAAABGAAAA/wAAAPQAAAAxAAAAAAAAAAQAAAAAAAAAAAAAAAEAAAAAAAAAEAAA
        APAAAADwAAAAEAAAAAAAAAABAAAAAAAAAAAAAAAEAAAAAAAAADEAAAD0AAAA/wAAAEUAAAAAAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAACXAAAA/wAAANYAAAAbAAAAAAAAAAUAAAABAAAAAQAA
        AAAAAAAQAAAA8gAAAPIAAAAQAAAAAAAAAAEAAAABAAAABQAAAAAAAAAbAAAA1wAAAP8AAACXAAAAAAAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAkAAADCAAAA/wAAANcAAAAtAAAAAAAA
        AAIAAAAEAAAAAwAAAAAAAADDAAAAwwAAAAAAAAADAAAABAAAAAIAAAAAAAAALQAAANcAAAD/AAAAwgAA
        AAkAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAABIAAADEAAAA/wAA
        APIAAAB4AAAADAAAAAAAAAABAAAAAAAAAAQAAAAEAAAAAAAAAAEAAAAAAAAADAAAAHgAAADyAAAA/wAA
        AMQAAAASAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAA
        AAgAAACZAAAA/wAAAP8AAADmAAAAjgAAAEcAAAAiAAAAEQAAABIAAAAiAAAARwAAAI0AAADlAAAA/wAA
        AP8AAACZAAAACAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAACAAAAAwAAAAAAAABBAAAAwQAAAP8AAAD/AAAA/wAAAP4AAAD1AAAA9QAAAP4AAAD/AAAA/wAA
        AP8AAADCAAAAQQAAAAAAAAADAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAAAAAABAAAAMwAAAIEAAAC8AAAA4AAAAPAAAADwAAAA4AAA
        ALwAAACBAAAAMwAAAAEAAAAAAAAAAwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAIAAAAAAAAAAAAAAAAAAAAEAAAADwAA
        AA8AAAAFAAAAAAAAAAAAAAAAAAAAAgAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAEAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAABAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAEAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/+gX//9CQv/9lCm/+kACX/SAAS/qAABX1AvQK8ggBBOISaIRkKdRCZFe
        oYkhPUGEIjqCRCJ1BURCegpCQvYVQkL0K0JCdCZCInQuRCI0LEQhNCyEkVQqiZCkJQmIRCIRyCAEE9QK
        UCvqAABX9IABL/pAAl/9lCm//0JC///oF/8=
</value>
  </data>
</root>